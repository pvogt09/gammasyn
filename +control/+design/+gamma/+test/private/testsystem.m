function [system] = testsystem(descriptor, number_states, number_controls, number_measurements, number_measurements_xdot, number_references)
	%TESTSYSTEM return an arbitrary system with the specified number of atates, controls and measurements
	%	Input:
	%		descriptor:					indicator if descriptor matrix should be used
	%		number_states:				number of system states
	%		number_controls:			number of controls
	%		number_measurements:		number of measurements
	%		number_measurements_xdot:	number of derivative measurements
	%		number_references:			number of references
	% Output:
	%		system:						arbitrary system
	if nargin <= 4
		number_measurements_xdot = 0;
	end
	if nargin <= 6
		if descriptor
			system = struct(...
				'A',		-diag(1:number_states),...
				'B',		randi(10, [number_states, number_controls]),...
				'C',		randi(10, [number_measurements, number_states]),...
				'C_dot',	randi(10, [number_measurements_xdot, number_states]),...
				'D',		zeros(number_measurements, number_controls)...
			);
		else
			system = struct(...
				'E',		2*eye(number_states),...
				'A',		-diag(1:number_states),...
				'B',		randi(10, [number_states, number_controls]),...
				'C',		randi(10, [number_measurements, number_states]),...
				'C_dot',	randi(10, [number_measurements_xdot, number_states]),...
				'D',		zeros(number_measurements, number_controls)...
			);
		end
	else
		if descriptor
			system = struct(...
				'A',		-diag(1:number_states),...
				'B',		randi(10, [number_states, number_controls]),...
				'C',		randi(10, [number_measurements, number_states]),...
				'C_dot',	randi(10, [number_measurements_xdot, number_states]),...
				'D',		zeros(number_measurements, number_controls),...
				'C_ref',	randi(nunmber_references, number_states),...
				'D_ref',	zeros(number_references, number_controls)...
			);
		else
			system = struct(...
				'E',		2*eye(number_states),...
				'A',		-diag(1:number_states),...
				'B',		randi(10, [number_states, number_controls]),...
				'C',		randi(10, [number_measurements, number_states]),...
				'C_dot',	randi(10, [number_measurements_xdot, number_states]),...
				'D',		zeros(number_measurements, number_controls),...
				'C_ref',	randi(nunmber_references, number_states),...
				'D_ref',	zeros(number_references, number_controls)...
			);
		end
	end
end